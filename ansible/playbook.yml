---
- name: Setup server
  hosts: all
  become: true
  tasks:
    - name: Add PHP repository
      ansible.builtin.apt_repository:
        state: present
        repo: ppa:ondrej/php

    - name: Install packages
      ansible.builtin.apt:
        update_cache: true
        autoremove: true
        purge: true
        state: present
        name:
          - curl
          - build-essential
          - fail2ban
          - git
          - htop
          - imagemagick
          - libglu1-mesa-dev
          - libgl1-mesa-dev
          - libsdl1.2-dev
          - screen
          - ufw
          - unzip
          - zip

          - software-properties-common
          - php5.6
          - php5.6-fpm
          - php5.6-mysql
          - php5.6-curl
          - php5.6-xml
          - php5.6-xdebug
          - nginx

    - name: Setup firewall
      community.general.ufw:
        state: enabled
        policy: deny
        logging: 'on'

    - name: Firewall rate limit OpenSSH
      community.general.ufw:
        app: OpenSSH
        rule: limit

    - name: Firwall allow web traffic
      community.general.ufw:
        app: Nginx Full
        rule: allow

    - name: Firwall allow game traffic
      community.general.ufw:
        port: 8005:8006
        protocol: tcp
        rule: allow

    - name: Create gameServers directory
      ansible.builtin.file:
        path: /opt/gameServers/
        state: directory
        mode: '755'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'

    - name: Link gameServers directory
      become: false
      ansible.builtin.file:
        src: /opt/gameServers/
        dest: '/home/{{ ansible_user }}/gameServers'
        state: link

    - name: Create web directory
      ansible.builtin.file:
        path: '/var/www/{{ web_domain }}'
        state: directory
        mode: '755'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'

    # TODO: Idempotent
    # TODO: Handle if changes locally
    - name: Clone web repository # noqa: latest
      become: false
      ansible.builtin.git:
        clone: true
        repo: https://github.com/twohoursonelife/OneLifeWeb
        dest: /var/www/{{ web_domain }}

    # TODO: Idempotent
    - name: Configure nginx site
      ansible.builtin.copy:
        src: /var/www/{{ web_domain }}/site.conf
        dest: /etc/nginx/sites-available/{{ web_domain }}
        mode: '644'
        remote_src: true

    - name: Update site name
      ansible.builtin.replace:
        path: '/etc/nginx/sites-available/{{ web_domain }}'
        regexp: 'web\.twohoursonelife\.com'
        replace: '{{ web_domain }}'

    - name: Disable default nginx site
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Enable nginx site
      ansible.builtin.file:
        src: /etc/nginx/sites-available/{{ web_domain }}
        dest: /etc/nginx/sites-enabled/{{ web_domain }}
        state: link

    # TODO: Idempotent
    # Cant be completed with SSL config present before cert generated
    - name: Reload nginx
      ansible.builtin.systemd:
        name: nginx
        state: reloaded

    # TODO: Idempotent
    - name: Clone faces # noqa: latest
      become: false
      ansible.builtin.git:
        clone: true
        repo: https://github.com/twohoursonelife/OneLifeData7
        dest: /var/www/{{ web_domain }}/OneLifeData7

    - name: Setup faces
      become: false
      ansible.builtin.file:
        src: '/var/www/{{ web_domain }}/OneLifeData7/faces'
        dest: '/var/www/{{ web_domain }}/web/public/lineageServer/faces'
        state: link

    - name: Setup downloads
      become: false
      ansible.builtin.file:
        src: '/var/www/{{ web_domain }}/data/diffDownloads/patches'
        dest: '/var/www/{{ web_domain }}/web/public/downloads'
        state: link

- name: Certbot
  hosts: all
  become: true
  vars:
    certbot_install_method: package
    certbot_create_if_missing: true
    certbot_auto_renew: true
    certbot_auto_renew_user: '{{ ansible_user }}'
    certbot_admin_email: admin@twohoursonelife.com
    certbot_create_method: webroot
    certbot_webroot: '/var/www/{{ web_domain }}/web/public'
    certbot_create_extra_args: --no-redirect
    certbot_certs:
      - domains:
          - '{{ web_domain }}'

  roles:
    - geerlingguy.certbot
